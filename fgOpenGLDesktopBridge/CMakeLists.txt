cmake_minimum_required(VERSION 3.13.4)
project(fgOpenGLDesktopBridge LANGUAGES C CXX VERSION 0.1.0)

find_package(OpenGL REQUIRED)
find_package(glfw3 CONFIG REQUIRED)

if(MSVC)
  string(REGEX REPLACE "/EH[a-z]+" "" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
else()
  string(REPLACE "-fexceptions" "" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
endif()

file(GLOB_RECURSE fgOpenGLDesktopBridge_SOURCES "./*.cpp")

if(MSVC)
file(GLOB_RECURSE fgOpenGLDesktopBridge_HEADERS "./*.hpp")
add_library(fgOpenGLDesktopBridge SHARED ${fgOpenGLDesktopBridge_SOURCES} ${fgOpenGLDesktopBridge_HEADERS})
  target_link_options(fgOpenGLDesktopBridge PRIVATE "$<$<CONFIG:Release>:/LTCG>")
else()
add_library(fgOpenGLDesktopBridge SHARED ${fgOpenGLDesktopBridge_SOURCES})
endif()

set_property(TARGET fgOpenGLDesktopBridge PROPERTY C_STANDARD 17)
set_property(TARGET fgOpenGLDesktopBridge PROPERTY CXX_STANDARD 20)
set_property(TARGET fgOpenGLDesktopBridge PROPERTY CXX_EXTENSIONS OFF)
set_property(TARGET fgOpenGLDesktopBridge PROPERTY CXX_STANDARD_REQUIRED ON)
set_property(TARGET fgOpenGLDesktopBridge PROPERTY VERBOSE_MAKEFILE TRUE)

retarget_output(fgOpenGLDesktopBridge)
target_include_directories(fgOpenGLDesktopBridge PUBLIC ${CMAKE_SOURCE_DIR}/include)
target_include_directories(fgOpenGLDesktopBridge PRIVATE ${PROJECT_SOURCE_DIR})

if(MSVC)
  target_compile_options(fgOpenGLDesktopBridge PRIVATE /Zc:preprocessor $<$<CONFIG:Release>:/Oi /Ot /GL> ${CPP_WARNINGS})
else()
  target_compile_options(fgOpenGLDesktopBridge PRIVATE -pedantic -fno-exceptions -fno-rtti $<IF:$<CONFIG:Debug>,-g -DDEBUG -msse -msse2 -O0,-O3 -msse -msse2 -msse3 -mmmx -m3dnow -mcx16 -DNDEBUG> ${CPP_WARNINGS})
endif()

if(WIN32)
  find_package(mimalloc CONFIG REQUIRED)
  target_include_directories(fgOpenGLDesktopBridge PRIVATE ${OPENGL_INCLUDE_DIRS})
else()
  target_include_directories(fgOpenGLDesktopBridge PRIVATE ${OPENGL_INCLUDE_DIRS})
endif()

if(WIN32)
  target_link_libraries(fgOpenGLDesktopBridge PRIVATE ${OPENGL_LIBRARIES} fgOpenGL fgGLFW glfw mimalloc-static winmm.lib)
else()
  target_link_libraries(fgOpenGLDesktopBridge PRIVATE ${CMAKE_DL_LIBS} ${OPENGL_LIBRARIES} fgOpenGL fgGLFW glfw)
endif()