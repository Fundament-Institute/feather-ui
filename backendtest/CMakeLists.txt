cmake_minimum_required(VERSION 3.15)
project(backendtest LANGUAGES CXX VERSION 0.1.0)

find_package(OpenGL REQUIRED)

set(CMAKE_VERBOSE_MAKEFILE TRUE)
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)
set(CMAKE_POSITION_INDEPENDENT_CODE OFF)

if(MSVC)
  string(REGEX REPLACE "/EH[a-z]+" "" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${CPP_WARNINGS}")
  set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /Oi /Ot /GL")
  set(CMAKE_CXX_FLAGS_MINSIZEREL ${CMAKE_CXX_FLAGS_RELEASE})
  set(CMAKE_CXX_FLAGS_RELWITHDEBINFO ${CMAKE_CXX_FLAGS_DEBUG})
else()
  string(REPLACE "-fexceptions" "" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pedantic -fno-exceptions -fno-rtti ${CPP_WARNINGS}")
  set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -g -DDEBUG -O0")
  set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -O3 -msse -msse2 -msse3 -mmmx -m3dnow -mcx16 -DNDEBUG")
  set(CMAKE_CXX_FLAGS_MINSIZEREL ${CMAKE_CXX_FLAGS_RELEASE})
  set(CMAKE_CXX_FLAGS_RELWITHDEBINFO ${CMAKE_CXX_FLAGS_DEBUG})
endif()

file(GLOB_RECURSE backendtest_SOURCES "./*.cpp")

add_executable(backendtest ${backendtest_SOURCES})
retarget_output(backendtest)
target_include_directories(backendtest PUBLIC ${OPENGL_INCLUDE_DIRS})
target_include_directories(backendtest PUBLIC ${PROJECT_SOURCE_DIR}/../include)
add_dependencies(backendtest fgOpenGL)

if(WIN32)
target_link_libraries(backendtest PRIVATE fgOpenGL ${OPENGL_LIBRARIES})
else()
target_link_libraries(backendtest PRIVATE fgOpenGL ${OPENGL_LIBRARIES})
endif()